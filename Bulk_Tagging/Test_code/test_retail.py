# app.py - The main executable file
from selenium import webdriver
from selenium.webdriver.edge.service import Service
from selenium.webdriver.common.by import By
from webdriver_manager.microsoft import EdgeChromiumDriverManager
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from pynput.keyboard import Key,Controller
from time import sleep
from Test_locators import locators
from Test_data import data
import pytest


class Test_Logimax:
    @pytest.fixture
    

    def booting_function(self):
       self.driver = webdriver.Edge(service=Service(EdgeChromiumDriverManager().install()))
       self.driver.get(data.Logi_Data().url)
       self.driver.maximize_window()
       self.driver.implicitly_wait(5)
  
    
   
    def test_BUlk_tagging_Mc(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('1')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        sleep(5)
        Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().update_mc_type)).select_by_value('2')
        sleep(5)
        number=501
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().mc_value).send_keys(number)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()
        self.driver.switch_to.alert.accept()
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Bulk Tagging edit MC Successfully mc_value : {a}". format(a = number))
         
         
  
    def test_BUlk_tagging_VA(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('2')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().search).send_keys(data.Logi_Data().id)
        sleep(5)
        number1 = 14
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().wastage_percent).send_keys(number1)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()   
        self.driver.switch_to.alert.accept()
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Bulk Tagging edit VA Successfully    wastage_percentage : {a}". format(a = number1))
       
    
     
        
    def test_BUlk_tagging_Pcs(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('4')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        sleep(5)
        number2 = 4
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().pcs).send_keys(number2)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()   
        self.driver.switch_to.alert.accept()
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Bulk Tagging edit pcs Added Successfully    pcs : {a}". format(a = number2))
        
        
            
    def test_BUlk_tagging_attributes(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('7')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().add_attribute).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_attribute).click()
        sleep(5)
        attribute = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        attribute.send_keys('BANGLE STYLE')
        attribute.send_keys(Keys.RETURN) 
        sleep(30)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().list_attributes).click()
        sleep(8)
        data_value = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        data_value.send_keys('Gadi')
        data_value.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()     
        self.driver.switch_to.alert.accept()      
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Attributed added Successfully  value : {a}". format(a = 'Gadi'))
               
        
     
         
    def test_BUlk_tagging_Delete_attributes(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('7')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().add_attribute).click()
        sleep(5)
        dropdown1 = Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Attribute_edit))
        dropdown1.select_by_value('2')
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()  
        self.driver.switch_to.alert.accept()         
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Attribute Delete Successfully")
        
     
    def test_BUlk_tagging_add_image(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('9')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        #self.driver.switch_to.frame(0) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().add_image).click()
        sleep(5)
        keyboard = Controller()
        keyboard.type('C:\\Users\\Dell\Downloads\\image\\Chain.jpg')
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        sleep(8)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().save_button).click()           
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()    
        self.driver.switch_to.alert.accept() 
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Image added  Successfully")
    
                                                           
        
    def test_BUlk_tagging_delete_image(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('9')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()
        #self.driver.switch_to.frame(0) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().image_eye).click() 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().is_default).click() 
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().delete_image).click() 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().imagepreview_save).click() 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()       
        self.driver.switch_to.alert.accept()    
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Image Delete  Successfully")
           
    
        
    def test_BUlk_tagging_Add_charge(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('10')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()    
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().add_charge).click()    
        sleep(5)
        dropdown1 = Select(self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().charge_type))
        dropdown1.select_by_value('3')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().value).clear()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().value).send_keys(data.Logi_Data().charge)   
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()   
        self.driver.switch_to.alert.accept()    
        assert self.driver.title == 'Logimax Technology | Admin'
        print("charge Add Successfully")
          
    
    def test_BUlk_tagging_old_tag(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('12')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()    
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().old_tag_id).send_keys(data.Logi_Data().old_id)          
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()    
        self.driver.switch_to.alert.accept()       
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Old Tagging added  Successfully")
        
     
    def test_BUlk_tagging_MRP_PRICE(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('6')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('MRP GOLD')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('MACHINE MADE')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('HOLLOW ROPE')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().MRP_Code)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()    
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().MRP_rate).send_keys(data.Logi_Data().rate)          
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()    
        self.driver.switch_to.alert.accept()       
        assert self.driver.title == 'Logimax Technology | Admin'
        print("MRP Rate added  Successfully")
        
        
    def test_BUlk_tagging_Size(self,booting_function):   
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().username_inputBox).send_keys(data.Logi_Data().username)
        self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().password_inputBox).send_keys(data.Logi_Data().password)
        sleep(8)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().signButton).click()
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().side_bar).click()
        sleep(8)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Inventory_module).click()
        sleep(5)
        self.driver.find_element(by=By.PARTIAL_LINK_TEXT,value=locators.Logi_Locators().Bulk_Tagging).click()
        sleep(6)
        dropdown =Select (self.driver.find_element(by=By.ID,value=locators.Logi_Locators().choose_file))
        dropdown.select_by_value('8')
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_branch).click()
        sleep(5)
        branch = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        branch.send_keys('HEAD OFFICE')
        branch.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_product).click()
        sleep(5)
        product = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        product.send_keys('RING & COIN')
        product.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('ARAM')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().select_sub_design).click()
        sleep(5)
        design = self.driver.find_element(by=By.XPATH,value=locators.Logi_Locators().text_box)
        design.send_keys('SOLID CHAIN')
        design.send_keys(Keys.RETURN) 
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Tag_code).send_keys(data.Logi_Data().id)
        sleep(5)
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().Add_filter).click()    
        sleep(8)
        dropdown1 = Select (self.driver.find_element(by=By.NAME,value=locators.Logi_Locators().size))
        dropdown1.select_by_value('212')
        self.driver.find_element(by=By.ID,value=locators.Logi_Locators().submit).click()    
        self.driver.switch_to.alert.accept()       
        assert self.driver.title == 'Logimax Technology | Admin'
        print("Failed : Size column  not show in table ") 
     
            
        